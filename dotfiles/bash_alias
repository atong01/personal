#!/bin/bash
#DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# liquid prompt
[[ $- = *i* ]] && source $HOME/personal/liquidprompt/liquidprompt

# alias df='pydf'
# ls: illegal option -- - caused by --color=auto no longer applicable to mac
alias ll='ls -lhAFHG'
alias ls='ls -FHG'
alias mkdir='mkdir -pv'
alias ps='ps auxf'
alias psg='ps aux | grep -v grep | grep -i -e VSZ -e'
alias wget='wget -c'
alias ddu='du -h -d 1 | sort -hr'

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'

mcd() { mkdir -p '$1'; cd '$1';}

# Python
alias python='python3'

alias svim='sudo vim'

# Git
alias gs='git status'
alias ga='git add'
alias gA='git add --all'
alias gaa='git add -a'
alias gcm='git commit -m'
alias gca='git commit -a -m'
alias gpush='git push'
alias gdiff='git diff'

# Sourcing
alias src='source ~/.bashrc'

# Yale specific
alias zoo='ssh node.zoo'

# Slurm
format="\"%8i %8g %9u %5P %30j %2t %12M %12l %5D %3C %10R %10b\""
flags="-S +i -o ${format}"
alias q="squeue -u $USER ${flags}"  # my jobs
alias qa="squeue -p isi -a ${flags}" # Jobs in the parition I care
alias qaa="squeue -a ${flags}" # Jobs from all paritions
###############
# SINFO aliases
###############
# Detailed sinfo
alias si="sinfo -o '%8P %10n %.11T %.4c %.8z %.6m %12G %10l %10L %10O %20E' -S '-P'"

# SSTAT alias to get information about your RUNNING jobs
# Usage: sst <jobid>
#     OR sst <jobid>.batch (if you use SBATCH and do not use SRUN inside)
alias sst='sstat --format=JobID,NTasks,AveCPU,AveCPUFreq,AveRSS,MaxRSS -j'

alias sc='cat $HOME/scratch/`ls -t $HOME/scratch | head -n1`'
alias st='tail -f $HOME/scratch/`ls -t $HOME/scratch | head -n1`'


if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# python3
alias python=python3
alias pip=pip3

# virtualenvwrapper
# Uncomment for virtualenvwrapper
#export WORKON_HOME=$HOME/.virtualenvs
#export PROJECT_HOME=$HOME/Devel
#source $HOME/.local/bin/virtualenvwrapper.sh

###
# OS Specific
###
if [[ "$OSTYPE" == "linux-gnu" ]]; then
  alias clip='xsel -b'
elif [[ "$OSTYPE" == "darwin"* ]]; then
  alias clip='pbcopy'
  # Brew Specific completion
  [ -f /usr/local/etc/bash_completion ] && . /usr/local/etc/bash_completion
else
  echo "Error, Undetected OS, cannot alias clip program"
fi

alias tensorboard='tensorboard --port 9002'

export LD_LIBRARY_PATH=/opt/cuda/extras/CUPTI/lib64/

pathaddback() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="${PATH:+"$PATH:"}$1"
    fi
}

pathaddfront() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="$1${PATH:+":$PATH"}"
    fi
}

# FIND PROCESS
function p(){
        ps aux | grep -i $1 | grep -v grep
}

function ka(){

    cnt=$( p $1 | wc -l)  # total count of processes found
    klevel=${2:-15}       # kill level, defaults to 15 if argument 2 is empty

    echo -e "\nSearching for '$1' -- Found" $cnt "Running Processes .. "
    p $1

    echo -e '\nTerminating' $cnt 'processes .. '

    ps aux  |  grep -i $1 |  grep -v grep   | awk '{print $2}' | xargs sudo kill -klevel
    echo -e "Done!\n"

    echo "Running search again:"
    p "$1"
    echo -e "\n"
}

push() {
  curl -s -F "token=ah85tu9i344rww2q2ph3ao9bo8x6vy" \
  -F "user=u2qt4h4xadsi8bkxtsoqyxeyrf3t2r" \
  -F "title=Finished!" \
  -F "message=$1" https://api.pushover.net/1/messages.json > /dev/null 2>&1
}

pathaddfront $HOME/bin/
pathaddfront $HOME/.local/bin/
